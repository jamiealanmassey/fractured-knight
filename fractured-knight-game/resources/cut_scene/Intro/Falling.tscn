[gd_scene load_steps=16 format=2]

[ext_resource path="res://resources/cut_scene/Intro/Falling.gd" type="Script" id=1]
[ext_resource path="res://resources/cut_scene/Sprite/Space.png" type="Texture" id=2]
[ext_resource path="res://resources/cut_scene/Sprite/desert.png" type="Texture" id=3]
[ext_resource path="res://resources/cut_scene/Sprite/rocket04.png" type="Texture" id=4]
[ext_resource path="res://resources/cut_scene/Sprite/rocket(1).png" type="Texture" id=5]
[ext_resource path="res://resources/cut_scene/Sprite/r1.png" type="Texture" id=6]
[ext_resource path="res://resources/cut_scene/Sprite/r2.png" type="Texture" id=7]
[ext_resource path="res://resources/cut_scene/Sprite/rocket02.png" type="Texture" id=8]
[ext_resource path="res://resources/cut_scene/Sprite/r3.png" type="Texture" id=9]
[ext_resource path="res://resources/sfx/sound effects/crash.wav" type="AudioStream" id=10]

[sub_resource type="GDScript" id=1]
resource_local_to_scene = true
script/source = "extends Node2D

onready var sprite = get_node(\"AnimatedSprite\")

var motion1 = Vector2(0, 800)
var motion2 = Vector2(0, 800)

func _ready():
	set_process(true)

func _process(delta):
	if (sprite.position.y < 0):
		sprite.fly_in(delta)
	if (sprite.position.y >= 0):
		if position.y >= 0:
			sprite.on_hitting_ground()
		else:
			if (position.y >= -2000):
				translate(motion2 * delta)
			else:
				translate(motion1 * delta)
"

[sub_resource type="SpriteFrames" id=2]
animations = [ {
"frames": [ ExtResource( 4 ) ],
"loop": true,
"name": "Stay",
"speed": 5.0
}, {
"frames": [ ExtResource( 5 ) ],
"loop": true,
"name": "Fall",
"speed": 5.0
}, {
"frames": [ ExtResource( 6 ), ExtResource( 7 ), ExtResource( 8 ), ExtResource( 9 ) ],
"loop": true,
"name": "Hit",
"speed": 5.0
} ]

[sub_resource type="GDScript" id=3]
resource_local_to_scene = true
script/source = "extends AnimatedSprite
signal finished_animation


func _ready():
	self.animation = \"Fall\"

func on_hitting_ground():
	if self.animation == \"Fall\":
		animation = \"Hit\"
		connect(\"animation_finished\",self, \"turn_stay\")

func turn_stay():
	animation = \"Stay\"
	emit_signal(\"finished_animation\")

func fly_in(delta):
	var vector = Vector2(0, 400)
	translate(vector * delta)
	pass"

[sub_resource type="GDScript" id=4]
resource_local_to_scene = true
script/source = "extends Camera2D

onready var ship = get_node(\"../Spaceship\")

func _ready():
	set_process(true)
	pass

func _process(delta):
	set_position(ship.position)
	pass

func set_position(pos):
	position = pos
	pass"

[sub_resource type="GDScript" id=5]
script/source = "extends AudioStreamPlayer2D

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization 
	play(4.7)
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[node name="Node" type="Node"]
script = ExtResource( 1 )

[node name="Background" type="Node2D" parent="."]
position = Vector2( 0, -250 )

[node name="space" type="Sprite" parent="Background"]
position = Vector2( 0, -3779.78 )
scale = Vector2( 5, 9.54877 )
texture = ExtResource( 2 )

[node name="desert" type="Sprite" parent="Background"]
scale = Vector2( 0.7, 0.7 )
texture = ExtResource( 3 )

[node name="Spaceship" type="Node2D" parent="."]
position = Vector2( 0, -8300 )
z_index = 2
script = SubResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="Spaceship"]
position = Vector2( 0, -1300 )
scale = Vector2( 0.2, 0.2 )
frames = SubResource( 2 )
animation = "Fall"
playing = true
script = SubResource( 3 )

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 0, -8300 )
current = true
zoom = Vector2( 1.69, 1.69 )
limit_smoothed = true
script = SubResource( 4 )

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
position = Vector2( 0, -3000 )
stream = ExtResource( 10 )
max_distance = 6500.0
script = SubResource( 5 )

[connection signal="finished_animation" from="Spaceship/AnimatedSprite" to="." method="_on_AnimatedSprite_finished_animation"]
