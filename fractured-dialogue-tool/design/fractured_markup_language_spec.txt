FRACTURED MARKUP LANGUAGE (FML) FEATURES
- Must be able to output a line of text
- Must allow branching based on inputs/actions
- Must be able to trigger combat from inside ML
- Must be able to add metadata to any line, such as an identifier, or any other relevant information, denoted by [metadata1,metadata2]
- Must be able to jump to different sections of dialogue
- Must terminate dialogue context when end of ML file is reached
- Must denote file by extension of .fml
- Must be an extremely simple language so that it can be parsed easily in Godot
- Must use tab indentation to identify blocks of execution

FML TOKENS/COMMANDS
-{ write[label]                      }- outputs a line of text to a valid context (this could be a console or UI) 
-{ branch[action1, action2, action3] }- indicates branching with a list of actions and should be followed by the appropriate number of branches
-{ point[label]                      }- identifies a location/node that can be directed to at any point of execution in the context
-{ locate                            }- moves the dialogue context to the line with the corresponding point label; the reserved label 'end' will close the context immediately
-{ trigger[message]                  }- emits a message from the dialogue context to any component that is listening with the specified message
-{ set[symbol]                       }- stores the symbol in memory to be used like a trigger, this is saved/loaded in the gamestate and should be persistent
-{ unset[symbol]                     }- removes the symbol from memory, this is saved/loaded in the gamestate and should be persistent
-{ evaluate[symbol]                  }- evaluates if a symbol exists and if it does the indented context is executed
-{ #                                 }- denotes a comment, the rest of the line after this token is discarded

A SIMPLE FML DIALOGUE EXMAPLE
write Hello there fellow adventurer!
write Beware for these paths are treacherous!

A BRANCHING FML DIALOGUE EXAMPLE
write Good day traveler.
write You must watch yourself in these parts.
branch[I heed your advice, You don't scare me!]
    point[heeded]
    write Good! You would be wise to do so.
    write Go forth and tread carefully.
    trigger[unlock_door] # Feeding this back into Godot could allow us to unlock a door and resume progression

    point[scare]
    write It is foolish of you to ignore my warning! # Spaces indicate separation of branches
    write Turn back now, you are not prepared for this journey.
    trigger[block_door] # Feeding this back into Godot could allow us to lock a door and pause progression

evaluate[block_door]
    write You hear a click and a sinking feeling floods you
    locate end # Close the dialogue early

write Farewell traveller, until next time!
write Oh, and one last piece of advice, it's dangerous to go alone.
